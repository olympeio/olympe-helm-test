# Olympe Helm Chart

# Description

# Prerequisites

- Nodes.js 14
- Yeoman 4.1.0 or greater

# Installation

## Basic Installation

- Install project generator globally and generate a project.
```
npm install --global @olympeio/generator-project
yo @olympeio/project
```
- Build and push the frontend image
```
npm run build:draw
docker build -t <registry>/<frontend-image>:<tag> -f docker/frontend.Dockerfile .
docker push <registry>/<frontend-image>:<tag>
```

- Build and push the orchestrator image
```
npx gulp patches
docker build -t <registry>/<orchestrator-image>:<tag> -f docker/orchestrator.Dockerfile .
docker push <registry>/<orchestrator-image>:<tag>
```

- Build and push the olympe-tool image
```
docker build -t <registry>/<olympe-tool-image>:<tag> -f docker/olympe-tool.Dockerfile --build-arg DEV_TOOLS_VERSION=$(cat package.json | jq -r '.devDependencies."@olympeio/dev-tools"') .
docker push <registry>/<olympe-tool-image>:<tag>
```

- Install this Helm chart using your images
```
helm dependency build && helm install <name> stable-composer/composer-helm \
 --namespace <name>
 --set orchestrator.image=<registry>/<orchestrator-image>:<tag> \
 --set frontend.image=<registry>/frontend-image>:<tag> \
 --set olympeTools.image=<registry>/<olympe-tool-image>:<tag> \
 --create-namespace
```

- Follow the process described on the outputed notes

## Expose your application

## External RabbitMQ
- auth module
- mqtt module

## External Neo4j
 - licensing
 - protocol (bolt/neo4j)

# Olympe Tools

You can use the Olympe Tools image to execute multiple tasks:

- ResetDB: Reset the database to its initial state or to the latest snapshot (if configured)
- Snapshooter: Take a snapshot of your instance and backup it to a git repository
- Change credentials: Change the admin user and/or password

## ResetDB

The resetDB is automatically executed at instance creation, but you can re-execute it manually if needed

> :warning: **Executing it will wipe all the handmade data**: Except if you snaphooted them before!

- Delete the remaining resetdb job
```
kubectl delete job -n <namespace> --selector=app.kubernetes.io/component=resetdb --ignore-not-found
```

- Execute the new job
```
helm dependency build && helm template <namespace> stable-composer/composer-helm \
 --set orchestrator.image=olympeio/awesome-project-orchestrator:latest \
 --set frontend.image=olympeio/awesome-project-frontend:latest \
 --set olympeTools.image=olympeio/vanilla-draw-olympe-tool:latest \
  -s templates/olympe-tools.yml | kubectl apply -n <namespace> -f -
```

## Snapshooter
- Create a secret with the following configuration:
```
cat <<EOF | kubectl apply -f -
apiVersion: v1
kind: Secret
metadata:
  name: snapshooter-secret
type: Opaque
stringData:
  config.json: |-
    [{
      "name": "<name>",
      "rootTags": [<list of root tags>],
      "path": "snapshot",
      "server": {
        "user": "admin",
        "password": "***",
        "host": "<namespace>-orchestrator",
        "port": 8080
      },
      "git":{
        "repo": "https://",
        "branch": "<branch>",
        "commitMessage": "Snapshot at {date} in {folder}\n\n"
      }
    }]
EOF
```
  **rootTags**: You can get the root tag of your application(s) by opening it in Draw. the tag will be in the URL\n
  **git.repo**: https link to repository with authentication token (e.g. https://gitlab-token:****@gitlab.mycompany.com/my-project.git)

- Enable the snapshooter in values.yaml
```
[...]
snapshooters:
  - name: <name>
    schedule: "45 12 * * *" # cron syntax
    secretName: snapshooter-secret
    image: <registry>/<olympe-tool-image>:<tag>
```

## Change credentials
- Create a secret named `orchestrator-default-secret` in the correct namespace with your new credentials. You can setup only `DRAW_PASSWORD`, `DRAW_USERNAME` or both of them.
```
cat <<EOF | kubectl apply -f -
apiVersion: v1
kind: Secret
metadata:
  name: orchestrator-default-secret
  namespace: <namespace>
type: Opaque
stringData:
  DRAW_USERNAME: <username>
  DRAW_PASSWORD: ****
EOF
```

- Delete the remaining resetCredentials job (if applicable)
```
kubectl delete job -n <namespace> --selector=app.kubernetes.io/component=resetcredentials --ignore-not-found
```

- Execute the new job
```
helm dependency build && helm template <namespace> stable-composer/composer-helm \
 --set orchestrator.image=olympeio/awesome-project-orchestrator:latest \
 --set frontend.image=olympeio/awesome-project-frontend:latest \
 --set olympeTools.image=olympeio/vanilla-draw-olympe-tool:latest \
 --set olympeTools.action=resetCredentials \
  -s templates/olympe-tools.yml
```

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesHeader" . }}
**Keys without a description are not meant to be changed**
{{ template "chart.valuesTable" . }}

## Examples
You will find some examples in the (examples folder)[examples/]